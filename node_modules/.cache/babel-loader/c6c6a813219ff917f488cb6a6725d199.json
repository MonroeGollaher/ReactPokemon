{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/monroegollaher/source/reactpokemon/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { getAllPokemon } from \"./services/PokemonService\";\n\nfunction App() {\n  _s();\n\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextUrl, setNextUrl] = useState('');\n  const [preUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const initUrl = 'https://pokeapi.co/api/v2/pokemon';\n  useEffect(() => {\n    async function fetchData() {\n      let res = await getAllPokemon(initUrl);\n      console.log(res);\n      setNextUrl(res.next);\n      setPrevUrl(res.previous);\n      await loadingPokemon(res.results);\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  const loadingPokemon = async data => {\n    let pokemon = await Promise.all(data.map(async p => {\n      let pokemonRecord = await getAllPokemon(pokemon);\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data is fetched\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VGDvtoz3ZMGeeD3XEe5sZqOlZDE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/monroegollaher/source/reactpokemon/src/App.js"],"names":["React","useState","useEffect","getAllPokemon","App","pokemonData","setPokemonData","nextUrl","setNextUrl","preUrl","setPrevUrl","loading","setLoading","initUrl","fetchData","res","console","log","next","previous","loadingPokemon","results","data","pokemon","Promise","all","map","p","pokemonRecord"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,SAASC,aAAT,QAA8B,2BAA9B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,MAAD,EAASC,UAAT,IAAuBT,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMY,OAAO,GAAG,mCAAhB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,SAAf,GAA2B;AACzB,UAAIC,GAAG,GAAG,MAAMZ,aAAa,CAACU,OAAD,CAA7B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAP,MAAAA,UAAU,CAACO,GAAG,CAACG,IAAL,CAAV;AACAR,MAAAA,UAAU,CAACK,GAAG,CAACI,QAAL,CAAV;AACA,YAAMC,cAAc,CAACL,GAAG,CAACM,OAAL,CAApB;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDE,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMM,cAAc,GAAG,MAAOE,IAAP,IAAgB;AACrC,QAAIC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,GAAL,CAAS,MAAMC,CAAN,IAAW;AAClD,UAAIC,aAAa,GAAG,MAAMzB,aAAa,CAACoB,OAAD,CAAvC;AACD,KAF+B,CAAZ,CAApB;AAGD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACIZ,OAAO,gBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ,gBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhCQP,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport { getAllPokemon } from \"./services/PokemonService\";\n\nfunction App() {\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextUrl, setNextUrl] = useState('');\n  const [preUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const initUrl = 'https://pokeapi.co/api/v2/pokemon'; \n\n  useEffect(() => {\n    async function fetchData() {\n      let res = await getAllPokemon(initUrl);\n      console.log(res);\n      setNextUrl(res.next);\n      setPrevUrl(res.previous);\n      await loadingPokemon(res.results);\n      setLoading(false);\n    }\n    fetchData();\n  }, []); \n\n  const loadingPokemon = async (data) => {\n    let pokemon = await Promise.all(data.map(async p => {\n      let pokemonRecord = await getAllPokemon(pokemon);\n    }))\n  }\n\n  return (\n    <div className=\"App\">\n      { loading  ? <h1>Loading...</h1> : (\n        <h1>Data is fetched</h1>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}